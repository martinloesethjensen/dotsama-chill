{"version":3,"sources":["context/SelectedNominatorsContext.js","components/table/NominatorTile.jsx","context/NominatorsContext.js","components/Button.js","utils/setProvider.js","utils/getApi.js","utils/chillNominators.js","components/table/SortButton.jsx","context/StatisticsContext.js","context/SelectedAccountContext.js","components/table/TableHeader.jsx","components/table/ChillAllTile.jsx","components/table/NominatorTable.jsx","components/LoadingState.js","utils/fetchNominators.js","components/ConnectToWallet.jsx","utils/fetchStatistics.js","components/statistics/Statistic.jsx","components/statistics/StatisticsGroup.jsx","components/statistics/StatisticsBox.jsx","ChillApp.jsx","index.js"],"names":["SelectedNominatorsContext","React","createContext","NominatorTile","address","amount","idx","useContext","selectedNominators","setSelectedNominators","isSelected","includes","className","checked","onChange","oldState","filter","e","type","substring","length","NominatorsContext","Button","name","onClick","color","buttonColor","undefined","style","borderColor","backgroundColor","getEndpointForNetwork","provider","SUPPORTED_NETWORKS","POLKADOT","Error","Object","freeze","_api","getApi","a","console","log","endpoint","WsProvider","ApiPromise","create","api","rpc","system","chain","nodeName","chillNominators","statistics","account","nominatorsList","chillableAmount","transactions","map","nominator","tx","staking","chillOther","slice","web3FromSource","meta","source","injector","utility","batch","signAndSend","signer","status","isInBlock","asInBlock","isBroadcast","isFinalized","asFinalized","isReady","SortButton","setNominators","SORT_ORDER","useState","ASC","sortOrder","setSortOrder","order","newState","sort","b","onColor","offColor","checkedIcon","uncheckedIcon","StatisticsContext","SelectedAccountContext","TableHeader","nominators","selectedAccount","ChillAllTile","val","target","_","handleOnChange","NominatorTable","onNominatorsFetched","key","LoadingState","fetchNominators","onSuccess","nominatorIds","minNominatorBond","query","bonded","multi","then","_controllers","controllers","controller","unwrapOrDefault","ledger","_stakes","nominatorsBelow","stake","item","total","toBn","toNumber","stash","toHuman","classNames","classes","Boolean","join","ConnectToWallet","setSelectedAccount","accounts","setAccounts","balance","setBalance","startWeb3","web3Enable","web3Accounts","allAccounts","fetchBalance","handleOnAccountChange","newAccount","previousFree","data","free","useEffect","value","open","show","as","Fragment","leave","leaveFrom","leaveTo","Options","Option","active","selected","fetchStatistics","Promise","all","keys","maxNominatorsCount","chillThreshold","nominatorKeys","args","threshold","Statistic","count","textColor","StatisticsGroup","first","second","StatisticsBox","ChillApp","setStatistics","isLoading","setIsLoading","setupChillApp","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6bbff9b.chunk.js","sourcesContent":["import React from \"react\";\n\n//Stores the addresses of nominators the user selected for chilling;\nexport const SelectedNominatorsContext = React.createContext(null);\n","import React, {useContext} from \"react\";\nimport {SelectedNominatorsContext} from \"../../context/SelectedNominatorsContext\";\n\nexport const NominatorTile = ({address, amount, idx}) => {\n\n    const {selectedNominators, setSelectedNominators} = useContext(SelectedNominatorsContext);\n\n    const getBackgroundColor = () => idx % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\";\n\n    const isSelected = () => selectedNominators.includes(address)\n\n    const trimAddress = () => `${address.substring(0, 5)}...${address.substring(address.length - 6, address.length - 1)}`\n\n    const handleOnChange = () => {\n        setSelectedNominators(\n            oldState =>\n                isSelected() ?\n                    oldState.filter(e => e !== address) :\n                    [...oldState, address]\n        );\n    }\n\n\n    return <div className={\"flex justify-between p-2 pr-4 border-gray-200 border items-center \" + getBackgroundColor()}>\n        <input checked={isSelected()} onChange={handleOnChange} type=\"checkbox\"\n               className=\"w-1/12 text-left\"/>\n        <div>\n            <p className=\"w-8/12 text-left self-center\">{trimAddress()}</p>\n        </div>\n        <p className=\"mx-4 w-3/12 text-right\">{amount}</p>\n    </div>\n}\n","import React from \"react\";\n\nexport const NominatorsContext = React.createContext(null)\n","import React from \"react\";\n\nexport const Button = ({name, onClick, color}) => {\n\n    const buttonColor = color === undefined ? \"#E6007A\" : color;\n    return <button\n        style={{\n            borderColor: buttonColor,\n            backgroundColor: buttonColor\n        }}\n        onClick={onClick}\n        className={`h-full items-center border-2 py-2 px-6  h-fit text-lg text-white tracking-wider font-bold rounded-sm`}>\n        {name}\n    </button>\n}\n\n","export const getEndpointForNetwork = provider => {\n    switch (provider) {\n        case SUPPORTED_NETWORKS.POLKADOT:\n            return \"wss://rpc.polkadot.io\";\n        // case SUPPORTED_NETWORKS.KUSAMA :\n        //  return \"wss://kusama-rpc.polkadot.io\";\n        default:\n            throw Error(`Unknown Provider ${provider}`);\n    }\n}\n\nexport const SUPPORTED_NETWORKS = Object.freeze({\n    \"POLKADOT\": \"POLKADOT\",\n})\n","import {getEndpointForNetwork, SUPPORTED_NETWORKS} from \"./setProvider\";\nimport {ApiPromise, WsProvider} from \"@polkadot/api\";\n\n\nlet _api = null;\n\nexport const getApi = async () => {\n\n    //Singleton here :D\n    if (_api !== null) {\n        console.log(\"used api instance from singleton\")\n        return _api;\n    }\n\n    const endpoint = getEndpointForNetwork(SUPPORTED_NETWORKS.POLKADOT);\n\n    const provider = new WsProvider(endpoint);\n    const api = await ApiPromise.create({provider});\n\n    const nodeName = await api.rpc.system.chain();\n\n    console.log(`Connected to node ${nodeName}`);\n\n    _api = api;\n    return _api;\n}\n","import {getApi} from \"./getApi\";\nimport {web3FromSource} from \"@polkadot/extension-dapp\";\n\nexport const chillNominators = async (statistics, account, nominatorsList) => {\n\n    const api = await getApi();\n\n    const {chillableAmount} = statistics;\n\n    //createTransactionBatch\n    const transactions = nominatorsList.map(nominator => api.tx.staking.chillOther(nominator));\n\n\n    // if they are higher than `chillableAmount`\n    if (nominatorsList.length > chillableAmount) {\n        nominatorsList.slice(0, chillableAmount - 1);\n    }\n\n\n    const injector = await web3FromSource(account.meta.source);\n\n    console.log(\"Total chillable:\", transactions.length);\n\n    console.log(\"Nominator\")\n\n\n    console.log(nominatorsList)\n    console.log(transactions)\n\n\n    // return;\n\n    const tx = api.tx.utility.batch(transactions);\n    await tx.signAndSend(account.address, {signer: injector.signer}, ({status}) => {\n        if (status.isInBlock) {\n            console.log(\n                `📀 Transaction ${tx.meta.name} included at blockHash ${status.asInBlock}`\n            );\n        } else if (status.isBroadcast) {\n            console.log(`🚀 Transaction broadcasted.`);\n        } else if (status.isFinalized) {\n            console.log(\n                `💯 Transaction ${tx.meta.name}(..) Finalized at blockHash ${status.asFinalized}`\n            );\n        } else if (status.isReady) {\n            // let's not be too noisy..\n        } else {\n            console.log(`🤷 Other status ${status}`);\n        }\n    });\n\n}\n","import React, {useContext, useState} from \"react\";\nimport Switch from \"react-switch\";\nimport {NominatorsContext} from \"../../context/NominatorsContext\";\n\nexport const SortButton = ({}) => {\n\n\n    const {setNominators} = useContext(NominatorsContext);\n\n    const SORT_ORDER = Object.freeze({\n        \"ASC\": false,\n        \"DESC\": true\n    })\n    const [sortOrder, setSortOrder] = useState(SORT_ORDER.ASC)\n\n    const getSortOrderName = () => `${sortOrder === SORT_ORDER.ASC ? \"ASC\" : \"DESC\"}`\n\n    const sortNominators = order => {\n        setSortOrder(order);\n        setNominators(oldState => {\n                const newState = [...oldState];\n                order === SORT_ORDER.ASC ?\n                    newState.sort((a, b) => a.amount > b.amount ? 1 : -1) :\n                    newState.sort((a, b) => a.amount < b.amount ? 1 : -1);\n\n                return newState;\n            }\n        );\n    }\n\n    return <div className=\"flex items-center \">\n        <p className=\"pr-2 \">{getSortOrderName()}</p>\n        <Switch onChange={sortNominators}\n                onColor=\"#E6007A\"\n                offColor=\"#E6007A\"\n                checked={sortOrder}\n                checkedIcon={false}\n                uncheckedIcon={false}\n        />\n    </div>\n\n}\n","import React from \"react\";\n\nexport const StatisticsContext = React.createContext(null)\n","import React from \"react\";\n\nexport const SelectedAccountContext = React.createContext(null);\n","import {NominatorsContext} from \"../../context/NominatorsContext\";\nimport {SelectedNominatorsContext} from \"../../context/SelectedNominatorsContext\";\nimport React, {useContext, useState} from \"react\";\nimport {Button} from \"../Button\";\nimport {chillNominators} from \"../../utils/chillNominators\";\nimport {SortButton} from \"./SortButton\";\nimport {RangeSlider} from \"../slider/RangeSlider\";\nimport {StatisticsContext} from \"../../context/StatisticsContext\";\nimport {SelectedAccountContext} from \"../../context/SelectedAccountContext\";\n\nexport const TableHeader = () => {\n\n    const {nominators, setNominators} = useContext(NominatorsContext);\n    const {selectedNominators} = useContext(SelectedNominatorsContext);\n    const {statistics} = useContext(StatisticsContext);\n    const {selectedAccount} = useContext(SelectedAccountContext);\n\n    const handleOnClick = () => {\n        chillNominators(statistics, selectedAccount, selectedNominators);\n\n    }\n\n    const getButtonName = () => `Chill ${selectedNominators.length}`\n\n\n    return <div className=\"text-lg\">\n\n        <div className=\"flex justify-between mb-2  p-4  bg-white items-center\">\n            <p className=\"text-2xl \">Nominators ({nominators.length})</p>\n            <div className=\"flex justify-between items-center w-4/12 \">\n                <SortButton/>\n                <Button onClick={handleOnClick} name={getButtonName()}/>\n            </div>\n        </div>\n        <div className=\"flex items-center font-bold px-4 py-2 bg-white \">\n            <p className=\"w-1/12 text-left\">Wanna Chill ? </p>\n            <p className=\"w-8/12\">Address</p>\n            <p className=\"w-3/12 text-right  \">Amount</p>\n        </div>\n    </div>\n\n}\n","import React, {useContext} from \"react\";\nimport {SelectedNominatorsContext} from \"../../context/SelectedNominatorsContext\";\nimport {NominatorsContext} from \"../../context/NominatorsContext\";\n\nexport const ChillAllTile = () => {\n    const {selectedNominators, setSelectedNominators} = useContext(SelectedNominatorsContext);\n    const {nominators} = useContext(NominatorsContext);\n\n    const getBackgroundColor = () => \"bg-gray-100\";\n\n    const handleOnChange = (val) => {\n        const isSelected = val.target.checked;\n        setSelectedNominators(_ => isSelected ? [...nominators.map(e => e.address)] : []);\n    }\n\n    return <div className={\"flex justify-between p-2 border-gray-200 border items-center \" + getBackgroundColor()}>\n        <input onChange={(val) => handleOnChange(val)} type=\"checkbox\" className=\"w-1/12 text-left\"/>\n        <p className=\"w-8/12 text-left self-center font-bold\">Chill all nominators</p>\n        <p className=\"mx-4 w-3/12 text-right\"></p>\n    </div>\n}\n","import React, {useContext} from \"react\";\nimport {NominatorTile} from \"./NominatorTile\";\nimport {TableHeader} from \"./TableHeader\";\nimport {NominatorsContext} from \"../../context/NominatorsContext\";\nimport {ChillAllTile} from \"./ChillAllTile\";\n\nexport const NominatorTable = () => {\n\n    const {nominators, onNominatorsFetched} = useContext(NominatorsContext);\n\n\n    return <div>\n        <TableHeader/>\n        <ChillAllTile/>\n        {nominators.map((nominator, key) => <NominatorTile {...nominator} idx={key} key={nominator.address}/>)}\n    </div>\n}\n","import React from \"react\"\n\n//Todo add fancy loading state!!!\nexport const LoadingState = () => <p>Nominators are being loaded...</p>\n","//provider can be kusama or polkadot\n\n\nexport const fetchNominators = async (api, statistics, onSuccess) => {\n\n    const {nominatorIds, minNominatorBond} = statistics;\n\n    await api.query.staking.bonded\n        .multi(nominatorIds)\n        .then(async (_controllers) => {\n            const controllers = _controllers.map((controller) =>\n                controller.unwrapOrDefault()\n            );\n            await api.query.staking.ledger\n                .multi(controllers)\n                .then(async (_stakes) => {\n                    const nominatorsBelow = _stakes\n                        .map((stake) => stake.unwrapOrDefault())\n                        .filter((item) => item.total.toBn() < minNominatorBond.toNumber())\n                        .map(({stash, total}) => ({\n                            address: stash.toHuman(),\n                            amount: total.toHuman(),\n                        }));\n\n                    onSuccess(nominatorsBelow)\n\n                });\n        });\n\n}\n\n\n","/* This example requires Tailwind CSS v2.0+ */\nimport React, {Fragment, useEffect, useState} from \"react\";\nimport {web3Accounts, web3Enable} from \"@polkadot/extension-dapp\";\nimport {Listbox, Transition} from '@headlessui/react'\nimport {CheckIcon, SelectorIcon} from '@heroicons/react/solid'\nimport {getApi} from \"../utils/getApi\";\n\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport function ConnectToWallet({selectedAccount, setSelectedAccount}) {\n    const [accounts, setAccounts] = useState([]);\n    const [balance, setBalance] = useState(\"\");\n\n\n    const startWeb3 = async () => {\n        const allInjected = await web3Enable('dotsama-chill');\n\n        const allAccounts = await web3Accounts();\n\n\n        setAccounts(allAccounts);\n        setSelectedAccount(allAccounts[0]);\n\n        fetchBalance(allAccounts[0]);\n\n    }\n\n\n    const handleOnAccountChange = async (newAccount) => {\n        setSelectedAccount(newAccount);\n        fetchBalance(newAccount);\n\n    }\n\n    const fetchBalance = async (account) => {\n        const api = await getApi();\n\n        const {data: {free: previousFree}} = await api.query.system.account(account.address);\n        setBalance(previousFree.toHuman());\n    }\n\n    useEffect(() => {\n        startWeb3()\n    }, []);\n\n\n    return (\n\n        accounts.length === 0 ? <p>Please connect Polkadot.js Wallet</p> :\n\n            <div className=\"flex items-center\">\n                <p className=\"pr-4\">{balance}</p>\n                <Listbox value={selectedAccount} onChange={handleOnAccountChange}>\n                    {({open}) => (\n                        <>\n                            <div className=\"mt-1 relative pr-4\">\n                                <Listbox.Button\n                                    className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-black focus:border-black sm:text-sm\">\n              <span className=\"flex items-center\">\n                {/*<img src={selected.avatar} alt=\"\" className=\"flex-shrink-0 h-6 w-6 rounded-full\"/>*/}\n                  <span className=\"ml-3 block truncate\">{selectedAccount.meta.name}</span>\n              </span>\n                                    <span\n                                        className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\"/>\n              </span>\n                                </Listbox.Button>\n\n                                <Transition\n                                    show={open}\n                                    as={Fragment}\n                                    leave=\"transition ease-in duration-100\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <Listbox.Options\n                                        className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                        {accounts.map((account) => (\n                                            <Listbox.Option\n                                                key={account.address}\n                                                className={({active}) =>\n                                                    classNames(\n                                                        active ? 'text-white bg-black' : 'text-gray-900',\n                                                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                                                    )\n                                                }\n                                                value={account}\n                                            >\n                                                {({selected, active}) => (\n                                                    <>\n                                                        <div className=\"flex items-center\">\n                                                            {/*<img src={account.avatar} alt=\"\" className=\"flex-shrink-0 h-6 w-6 rounded-full\"/>*/}\n                                                            <span\n                                                                className={classNames(selected ? 'font-semibold' : 'font-normal', 'ml-3 block truncate')}\n                                                            >\n                            {account.meta.name}\n                          </span>\n                                                        </div>\n\n                                                        {selected ? (\n                                                            <span\n                                                                className={classNames(\n                                                                    active ? 'text-white' : 'text-black',\n                                                                    'absolute inset-y-0 right-0 flex items-center pr-4'\n                                                                )}\n                                                            >\n                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\"/>\n                          </span>\n                                                        ) : null}\n                                                    </>\n                                                )}\n                                            </Listbox.Option>\n                                        ))}\n                                    </Listbox.Options>\n                                </Transition>\n                            </div>\n                        </>\n                    )}\n                </Listbox>\n            </div>\n    )\n}\n","export const fetchStatistics = async (api) => {\n\n\n    const [nominatorKeys, minNominatorBond, maxNominatorsCount, chillThreshold] = await Promise.all([\n            api.query.staking.nominators.keys(),\n            api.query.staking.minNominatorBond(),\n            api.query.staking.maxNominatorsCount(),\n            api.query.staking.chillThreshold(),\n        ],\n    );\n\n    const nominatorIds = nominatorKeys.map(({args: [nominatorId]}) => nominatorId)\n    const threshold = (chillThreshold / 100) * maxNominatorsCount;\n\n    const chillableAmount = nominatorIds.length - threshold;\n\n    // User should not be allowed to chillOther as this is not possible if it is below threshold.\n    //TODO isnt the resulting array of fetch nominators empty if this case happens ?\n    if (nominatorIds.length < threshold) {\n        console.log(`You can\\'t chill others when nominators (${nominatorIds.length}) is below threshold (${threshold})`);\n        return;\n    }\n\n    return {\n        chillableAmount,\n        nominatorIds,\n        threshold,\n        minNominatorBond\n    }\n}\n","import React from \"react\";\n\nexport const Statistic = ({count, name, textColor}) =>\n    <div>\n        <p className={\"text-4xl pb-2 \"}>{count}</p>\n        <p className={\"text-lg text-\" + textColor}>{name}</p>\n    </div>\n\n","import React from \"react\";\nimport {Statistic} from \"./Statistic\";\n\nexport const StatisticsGroup = ({first, second}) => {\n    return <div className=\"gap-8  bg-white border-white rounded-2xl mb-4 p-12 px-16 grid grid-cols-2\">\n        <Statistic {...first}/>\n        <Statistic {...second}/>\n    </div>\n}\n","import React from \"react\";\nimport { StatisticsGroup } from \"./StatisticsGroup\";\n\nexport const StatisticsBox = ({\n  chillableAmount,\n  nominatorIds,\n  threshold,\n  minNominatorBond,\n}) => {\n  const minNominatorBondOrDefault = () =>\n    minNominatorBond === 0 ? \"Loading\" : minNominatorBond.toHuman();\n  const nominatorIdsOrDefault = () =>\n    nominatorIds === 0 ? \"Loading\" : nominatorIds.length;\n  const chillableAmountOrDefault = () =>\n    chillableAmount === 0 ? \"Loading\" : chillableAmount;\n  const thresholdOrDefault = () => (threshold === 0 ? \"Loading\" : threshold);\n  return (\n    <div className=\"flex justify-between mb-8\">\n      <StatisticsGroup\n        first={{\n          name: \"Threshold\",\n          count: thresholdOrDefault(),\n          textColor: \"red-500\",\n        }}\n      />\n      <div></div>\n      <StatisticsGroup\n        first={{\n          name: \"Chillable Amount\",\n          count: chillableAmountOrDefault(),\n          textColor: \"yellow-500\",\n        }}\n      />\n      <div></div>\n\n      <StatisticsGroup\n        first={{\n          name: \"Minimum Nominator Bond\",\n          count: minNominatorBondOrDefault(),\n          textColor: \"blue-500\",\n        }}\n      />\n    </div>\n  );\n};\n","import {NominatorTable} from \"./components/table/NominatorTable\";\nimport {NominatorsContext} from \"./context/NominatorsContext\";\nimport React, {useEffect, useState} from \"react\";\nimport {LoadingState} from \"./components/LoadingState\";\nimport {fetchNominators} from \"./utils/fetchNominators\";\nimport {SUPPORTED_NETWORKS} from \"./utils/setProvider\";\nimport {SelectedNominatorsContext} from \"./context/SelectedNominatorsContext\";\nimport {ConnectToWallet} from \"./components/ConnectToWallet\";\nimport {getApi} from \"./utils/getApi\";\nimport {fetchStatistics} from \"./utils/fetchStatistics\";\nimport {StatisticsContext} from \"./context/StatisticsContext\";\nimport {SelectedAccountContext} from \"./context/SelectedAccountContext\";\nimport {StatisticsBox} from \"./components/statistics/StatisticsBox\";\n\nexport const ChillApp = ({}) => {\n\n    const [nominators, setNominators] = useState([]);\n    const [selectedNominators, setSelectedNominators] = useState([]);\n\n    const [statistics, setStatistics] = useState({\n        chillableAmount: 0,\n        nominatorIds: 0,\n        threshold: 0,\n        minNominatorBond: 0\n    });\n\n    const [selectedAccount, setSelectedAccount] = useState({address: null, meta: {name: null}})\n\n    const [isLoading, setIsLoading] = useState(true);\n\n\n    useEffect(() => {\n        setupChillApp();\n    }, [])\n\n    const setupChillApp = async () => {\n        const api = await getApi(SUPPORTED_NETWORKS.POLKADOT);\n        const statistics = await fetchStatistics(api);\n\n\n        fetchNominators(api, statistics, onNominatorsFetched);\n        setStatistics(statistics);\n\n    }\n\n\n    const onNominatorsFetched = nominatorsList => {\n        nominatorsList.sort((a, b) => a.amount > b.amount ? 1 : -1);\n        setNominators(nominatorsList);\n        setIsLoading(false);\n    }\n\n\n    return <NominatorsContext.Provider value={{nominators, setNominators}}>\n        <SelectedNominatorsContext.Provider value={{selectedNominators, setSelectedNominators}}>\n            <StatisticsContext.Provider value={{statistics}}>\n                <SelectedAccountContext.Provider value={{selectedAccount}}>\n                    <div className=\" p-24 h-screen\" style={{backgroundColor: \"#f5f3f1\"}}>\n                        <div className=\"flex justify-between items-start pb-6\">\n                            <h1 className=\"text-4xl \">dotsama-chill</h1>\n                            <ConnectToWallet selectedAccount={selectedAccount} setSelectedAccount={setSelectedAccount}/>\n                        </div>\n                        <p className=\"text-md pb-6\">A tool to list nominators below threshold and has the option to\n                            chill multiple\n                            nominators in\n                            a batch.</p>\n                        <StatisticsBox {...statistics}/>\n                        {isLoading ? <LoadingState/> : <NominatorTable/>}\n                    </div>\n                </SelectedAccountContext.Provider>\n            </StatisticsContext.Provider>\n        </SelectedNominatorsContext.Provider>\n    </NominatorsContext.Provider>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"./index.css\";\n\nimport {ChillApp} from \"./ChillApp\";\n\nReactDOM.render(<ChillApp/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}